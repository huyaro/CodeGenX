package ${fullPackage};

#foreach($pkg in ${imports})
import ${pkg};
#end
import org.mapstruct.ReportingPolicy;
import org.mapstruct.factory.Mappers;
import org.babyfish.jimmer.Input;
import org.mapstruct.BeanMapping;
import org.mapstruct.Mapper;
import lombok.Data;


/**
 * <p>
 * ${table.getClassName()}Input
 * </p>
 *
 * @author ${author}
 * @date ${date}
 */
@Data
public class ${table.getClassName()}Input implements Input<${table.getClassName()}> {

    private static final Converter CONVERTER = Mappers.getMapper(Converter.class);

    ## ----------  BEGIN 字段循环遍历  ----------
    #foreach($field in ${table.getColumns()})
        /**
         * #if("$!{field.getComment()}" != "") ${field.getComment()} #else ${field.getName()} #end
         */
        private  ${field.getJvmTypeName()} ${field.getPropName()};

    #end
    ## ----------  END 普通字段循环遍历  ----------

    @Override
    public ${table.getClassName()} toEntity() {
        return CONVERTER.to${table.getClassName()}(this);
    }

    @Mapper
    interface Converter {

        @BeanMapping(unmappedTargetPolicy = ReportingPolicy.IGNORE)
        ${table.getClassName()} to${table.getClassName()}(${table.getClassName()}Input input);
    }
}